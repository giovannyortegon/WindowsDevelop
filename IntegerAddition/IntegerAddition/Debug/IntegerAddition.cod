; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27048.0 

	TITLE	C:\Users\Pentester\source\repos\IntegerAddition\IntegerAddition\IntegerAddition.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GlChar
PUBLIC	_GlShort
PUBLIC	_GlInt
PUBLIC	_GlLongLong
msvcjmc	SEGMENT
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6B9C2DC0_tchar@h DB 01H
__BB55335F_integeraddition@cpp DB 01H
msvcjmc	ENDS
_DATA	SEGMENT
_GlChar	DB	0aH
	ORG $+3
_GlShort DW	014H
	ORG $+2
_GlInt	DD	01eH
	ORG $+4
_GlLongLong DQ	00000000fffffffeH
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_wmain
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0BF@KHIANOCC@Before?7?7GlChar?3?7?7?$CFd?6@ ; `string'
PUBLIC	??_C@_0P@MBGGODIM@?7?7GlShort?3?7?$CFd?6@	; `string'
PUBLIC	??_C@_0O@MDHHNNPJ@?7?7GlInt?3?7?7?$CFd?6@	; `string'
PUBLIC	??_C@_0BE@IPDJHDKA@?7?7GlLongLong?3?7?$CFlld?6@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BE@FCAMHLFB@After?7?7GlChar?3?7?7?$CFd?6@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_IntegerAddition_:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BE@FCAMHLFB@After?7?7GlChar?3?7?7?$CFd?6@
CONST	SEGMENT
??_C@_0BE@FCAMHLFB@After?7?7GlChar?3?7?7?$CFd?6@ DB 'After', 09H, 09H, 'G'
	DB	'lChar:', 09H, 09H, '%d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IPDJHDKA@?7?7GlLongLong?3?7?$CFlld?6@
CONST	SEGMENT
??_C@_0BE@IPDJHDKA@?7?7GlLongLong?3?7?$CFlld?6@ DB 09H, 09H, 'GlLongLong:'
	DB	09H, '%lld', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MDHHNNPJ@?7?7GlInt?3?7?7?$CFd?6@
CONST	SEGMENT
??_C@_0O@MDHHNNPJ@?7?7GlInt?3?7?7?$CFd?6@ DB 09H, 09H, 'GlInt:', 09H, 09H
	DB	'%d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBGGODIM@?7?7GlShort?3?7?$CFd?6@
CONST	SEGMENT
??_C@_0P@MBGGODIM@?7?7GlShort?3?7?$CFd?6@ DB 09H, 09H, 'GlShort:', 09H, '%'
	DB	'd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KHIANOCC@Before?7?7GlChar?3?7?7?$CFd?6@
CONST	SEGMENT
??_C@_0BF@KHIANOCC@Before?7?7GlChar?3?7?7?$CFd?6@ DB 'Before', 09H, 09H, 'G'
	DB	'lChar:', 09H, 09H, '%d', 0aH, 00H		; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\pentester\source\repos\integeraddition\integeraddition\integeraddition.cpp
;	COMDAT _wmain
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_wmain	PROC						; COMDAT

; 11   : int _tmain(int argc, _TCHAR * argv[]) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __BB55335F_integeraddition@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 12   : 	printf("Before		GlChar:		%d\n", GlChar);

  00028	0f be 05 00 00
	00 00		 movsx	 eax, BYTE PTR _GlChar
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KHIANOCC@Before?7?7GlChar?3?7?7?$CFd?6@
  00035	e8 00 00 00 00	 call	 _printf
  0003a	83 c4 08	 add	 esp, 8

; 13   : 	printf("		GlShort:	%d\n", GlShort);

  0003d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR _GlShort
  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBGGODIM@?7?7GlShort?3?7?$CFd?6@
  0004a	e8 00 00 00 00	 call	 _printf
  0004f	83 c4 08	 add	 esp, 8

; 14   : 	printf("		GlInt:		%d\n", GlInt);

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR _GlInt
  00057	50		 push	 eax
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MDHHNNPJ@?7?7GlInt?3?7?7?$CFd?6@
  0005d	e8 00 00 00 00	 call	 _printf
  00062	83 c4 08	 add	 esp, 8

; 15   : 	printf("		GlLongLong:	%lld\n", GlLongLong);

  00065	a1 04 00 00 00	 mov	 eax, DWORD PTR _GlLongLong+4
  0006a	50		 push	 eax
  0006b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GlLongLong
  00071	51		 push	 ecx
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IPDJHDKA@?7?7GlLongLong?3?7?$CFlld?6@
  00077	e8 00 00 00 00	 call	 _printf
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16   : 	printf("\n");

  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00084	e8 00 00 00 00	 call	 _printf
  00089	83 c4 04	 add	 esp, 4

; 17   : 
; 18   : 	IntegerAddition_(3, 5, -37, 11);

  0008c	6a 00		 push	 0
  0008e	6a 0b		 push	 11			; 0000000bH
  00090	6a db		 push	 -37			; ffffffdbH
  00092	6a 05		 push	 5
  00094	6a 03		 push	 3
  00096	e8 00 00 00 00	 call	 _IntegerAddition_
  0009b	83 c4 14	 add	 esp, 20			; 00000014H

; 19   : 
; 20   : 	printf("After		GlChar:		%d\n", GlChar);

  0009e	0f be 05 00 00
	00 00		 movsx	 eax, BYTE PTR _GlChar
  000a5	50		 push	 eax
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FCAMHLFB@After?7?7GlChar?3?7?7?$CFd?6@
  000ab	e8 00 00 00 00	 call	 _printf
  000b0	83 c4 08	 add	 esp, 8

; 21   : 	printf("		GlShort:	%d\n", GlShort);

  000b3	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR _GlShort
  000ba	50		 push	 eax
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBGGODIM@?7?7GlShort?3?7?$CFd?6@
  000c0	e8 00 00 00 00	 call	 _printf
  000c5	83 c4 08	 add	 esp, 8

; 22   : 	printf("		GlInt:		%d\n", GlInt);

  000c8	a1 00 00 00 00	 mov	 eax, DWORD PTR _GlInt
  000cd	50		 push	 eax
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MDHHNNPJ@?7?7GlInt?3?7?7?$CFd?6@
  000d3	e8 00 00 00 00	 call	 _printf
  000d8	83 c4 08	 add	 esp, 8

; 23   : 	printf("		GlLongLong:	%lld\n", GlLongLong);

  000db	a1 04 00 00 00	 mov	 eax, DWORD PTR _GlLongLong+4
  000e0	50		 push	 eax
  000e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GlLongLong
  000e7	51		 push	 ecx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IPDJHDKA@?7?7GlLongLong?3?7?$CFlld?6@
  000ed	e8 00 00 00 00	 call	 _printf
  000f2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 24   : 	printf("\n");

  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000fa	e8 00 00 00 00	 call	 _printf
  000ff	83 c4 04	 add	 esp, 4

; 25   : 
; 26   : 	return (0);

  00102	33 c0		 xor	 eax, eax

; 27   : }

  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0010d	3b ec		 cmp	 ebp, esp
  0010f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
_wmain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A452D4A0_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

  00028	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0002b	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00031	50		 push	 eax
  00032	6a 00		 push	 0
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00037	51		 push	 ecx
  00038	8b f4		 mov	 esi, esp
  0003a	6a 01		 push	 1
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  00042	83 c4 04	 add	 esp, 4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 __vfprintf_l
  00052	83 c4 10	 add	 esp, 16			; 00000010H
  00055	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 959  :         __crt_va_end(_ArgList);

  00058	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 960  :         return _Result;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 961  :     }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A452D4A0_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00035	52		 push	 edx
  00036	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	51		 push	 ecx
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 644  :     }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __2CC6E67D_corecrt_stdio_config@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00028	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
