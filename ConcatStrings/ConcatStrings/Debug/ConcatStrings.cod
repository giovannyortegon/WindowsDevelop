; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27048.0 

	TITLE	C:\Users\Pentester\source\repos\ConcatStrings\ConcatStrings\ConcatStrings.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__6BC0FD35_vcruntime_new@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__A40A425D_stat@h DB 01H
__5A74375D_wchar@h DB 01H
__6B9C2DC0_tchar@h DB 01H
__5D371BD5_concatstrings@cpp DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfwprintf_l
PUBLIC	_wprintf
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_wmain
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0BM@JJAEALGP@?6Results?5for?5ConcatStrings?6@ ; `string'
PUBLIC	??_C@_19EOKOEIPK@?$AAO?$AAn?$AAe?$AA?5@		; `string'
PUBLIC	??_C@_19FDIPDLID@?$AAT?$AAw?$AAo?$AA?5@		; `string'
PUBLIC	??_C@_1O@KMABBCOF@?$AAT?$AAh?$AAr?$AAe?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_19BMMDKGBM@?$AAF?$AAo?$AAu?$AAr@		; `string'
PUBLIC	??_C@_1BA@BJHHGHEK@?$AA?$DM?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$DO@ ; `string'
PUBLIC	??_C@_1DK@GLBMPLHO@?$AA?5?$AA?5?$AAd?$AAe?$AAs?$AA_?$AAl?$AAe?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI@ ; `string'
PUBLIC	??_C@_19KMIINFB@?$AAR?$AAe?$AAd?$AA?5@		; `string'
PUBLIC	??_C@_1O@PPEIGEJN@?$AAG?$AAr?$AAe?$AAe?$AAn?$AA?5@ ; `string'
PUBLIC	??_C@_1M@IPBCFKCC@?$AAB?$AAl?$AAu?$AAe?$AA?5@	; `string'
PUBLIC	??_C@_1BA@FHEFHGHD@?$AAY?$AAe?$AAl?$AAl?$AAo?$AAw?$AA?5@ ; `string'
PUBLIC	??_C@_1BE@CDMDMHDJ@?$AAA?$AAi?$AAr?$AAp?$AAl?$AAa?$AAn?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_19JDGBIIPL@?$AAC?$AAa?$AAr?$AA?5@		; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1O@FEJHGEPG@?$AAT?$AAr?$AAu?$AAc?$AAk?$AA?5@ ; `string'
PUBLIC	??_C@_1M@FEFOAPMO@?$AAB?$AAo?$AAa?$AAt?$AA?5@	; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfwprintf:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	_ConcatStrings_:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1M@FEFOAPMO@?$AAB?$AAo?$AAa?$AAt?$AA?5@
CONST	SEGMENT
??_C@_1M@FEFOAPMO@?$AAB?$AAo?$AAa?$AAt?$AA?5@ DB 'B', 00H, 'o', 00H, 'a', 00H
	DB	't', 00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@FEJHGEPG@?$AAT?$AAr?$AAu?$AAc?$AAk?$AA?5@
CONST	SEGMENT
??_C@_1O@FEJHGEPG@?$AAT?$AAr?$AAu?$AAc?$AAk?$AA?5@ DB 'T', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 'k', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19JDGBIIPL@?$AAC?$AAa?$AAr?$AA?5@
CONST	SEGMENT
??_C@_19JDGBIIPL@?$AAC?$AAa?$AAr?$AA?5@ DB 'C', 00H, 'a', 00H, 'r', 00H, ' '
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@CDMDMHDJ@?$AAA?$AAi?$AAr?$AAp?$AAl?$AAa?$AAn?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1BE@CDMDMHDJ@?$AAA?$AAi?$AAr?$AAp?$AAl?$AAa?$AAn?$AAe?$AA?5@ DB 'A', 00H
	DB	'i', 00H, 'r', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'n', 00H, 'e'
	DB	00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@FHEFHGHD@?$AAY?$AAe?$AAl?$AAl?$AAo?$AAw?$AA?5@
CONST	SEGMENT
??_C@_1BA@FHEFHGHD@?$AAY?$AAe?$AAl?$AAl?$AAo?$AAw?$AA?5@ DB 'Y', 00H, 'e', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'w', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IPBCFKCC@?$AAB?$AAl?$AAu?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1M@IPBCFKCC@?$AAB?$AAl?$AAu?$AAe?$AA?5@ DB 'B', 00H, 'l', 00H, 'u', 00H
	DB	'e', 00H, ' ', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@PPEIGEJN@?$AAG?$AAr?$AAe?$AAe?$AAn?$AA?5@
CONST	SEGMENT
??_C@_1O@PPEIGEJN@?$AAG?$AAr?$AAe?$AAe?$AAn?$AA?5@ DB 'G', 00H, 'r', 00H, 'e'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19KMIINFB@?$AAR?$AAe?$AAd?$AA?5@
CONST	SEGMENT
??_C@_19KMIINFB@?$AAR?$AAe?$AAd?$AA?5@ DB 'R', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@GLBMPLHO@?$AA?5?$AA?5?$AAd?$AAe?$AAs?$AA_?$AAl?$AAe?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI@
CONST	SEGMENT
??_C@_1DK@GLBMPLHO@?$AA?5?$AA?5?$AAd?$AAe?$AAs?$AA_?$AAl?$AAe?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI@ DB ' '
	DB	00H, ' ', 00H, 'd', 00H, 'e', 00H, 's', 00H, '_', 00H, 'l', 00H
	DB	'e', 00H, 'n', 00H, ':', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' '
	DB	00H, '(', 00H, '%', 00H, 'd', 00H, ')', 00H, ' ', 00H, 'd', 00H
	DB	'e', 00H, 's', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, ' '
	DB	00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@BJHHGHEK@?$AA?$DM?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$DO@
CONST	SEGMENT
??_C@_1BA@BJHHGHEK@?$AA?$DM?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$DO@ DB '<', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, '>', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_19BMMDKGBM@?$AAF?$AAo?$AAu?$AAr@
CONST	SEGMENT
??_C@_19BMMDKGBM@?$AAF?$AAo?$AAu?$AAr@ DB 'F', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KMABBCOF@?$AAT?$AAh?$AAr?$AAe?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1O@KMABBCOF@?$AAT?$AAh?$AAr?$AAe?$AAe?$AA?5@ DB 'T', 00H, 'h', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19FDIPDLID@?$AAT?$AAw?$AAo?$AA?5@
CONST	SEGMENT
??_C@_19FDIPDLID@?$AAT?$AAw?$AAo?$AA?5@ DB 'T', 00H, 'w', 00H, 'o', 00H, ' '
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19EOKOEIPK@?$AAO?$AAn?$AAe?$AA?5@
CONST	SEGMENT
??_C@_19EOKOEIPK@?$AAO?$AAn?$AAe?$AA?5@ DB 'O', 00H, 'n', 00H, 'e', 00H, ' '
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JJAEALGP@?6Results?5for?5ConcatStrings?6@
CONST	SEGMENT
??_C@_0BM@JJAEALGP@?6Results?5for?5ConcatStrings?6@ DB 0aH, 'Results for '
	DB	'ConcatStrings', 0aH, 00H			; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\pentester\source\repos\concatstrings\concatstrings\concatstrings.cpp
;	COMDAT _wmain
_TEXT	SEGMENT
tv138 = -1052						; size = 4
tv90 = -1052						; size = 4
tv74 = -1052						; size = 4
_des3_temp$ = -660					; size = 4
_des3_len$ = -648					; size = 4
_des3$ = -636						; size = 256
_des3_size$ = -372					; size = 4
_src3_n$ = -360						; size = 4
_src3$ = -348						; size = 20
_des2_temp$ = -320					; size = 4
_des2_len$ = -308					; size = 4
_des2$ = -296						; size = 32
_des2_size$ = -256					; size = 4
_src2_n$ = -244						; size = 4
_src2$ = -232						; size = 16
_des1_temp$ = -208					; size = 4
_des1_len$ = -196					; size = 4
_des1$ = -184						; size = 128
_des1_size$ = -48					; size = 4
_src1_n$ = -36						; size = 4
_src1$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_wmain	PROC						; COMDAT

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 04 00
	00		 sub	 esp, 1052		; 0000041cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd e4 fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1052]
  00012	b9 07 01 00 00	 mov	 ecx, 263		; 00000107H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __5D371BD5_concatstrings@cpp
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 8    : 	printf("\nResults for ConcatStrings\n");

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JJAEALGP@?6Results?5for?5ConcatStrings?6@
  00037	e8 00 00 00 00	 call	 _printf
  0003c	83 c4 04	 add	 esp, 4

; 9    : 
; 10   : 	// Destination buffer large enough
; 11   : 	const wchar_t* src1[] = { L"One ", L"Two ", L"Three ", L"Four" };

  0003f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _src1$[ebp], OFFSET ??_C@_19EOKOEIPK@?$AAO?$AAn?$AAe?$AA?5@
  00046	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _src1$[ebp+4], OFFSET ??_C@_19FDIPDLID@?$AAT?$AAw?$AAo?$AA?5@
  0004d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _src1$[ebp+8], OFFSET ??_C@_1O@KMABBCOF@?$AAT?$AAh?$AAr?$AAe?$AAe?$AA?5@
  00054	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _src1$[ebp+12], OFFSET ??_C@_19BMMDKGBM@?$AAF?$AAo?$AAu?$AAr@

; 12   : 	int src1_n = sizeof(src1) / sizeof(wchar_t*);

  0005b	c7 45 dc 04 00
	00 00		 mov	 DWORD PTR _src1_n$[ebp], 4

; 13   : 	const int des1_size = 64;

  00062	c7 45 d0 40 00
	00 00		 mov	 DWORD PTR _des1_size$[ebp], 64 ; 00000040H

; 14   : 	wchar_t des1[des1_size];
; 15   : 
; 16   : 	int des1_len = ConcatStrings_(des1, des1_size, src1, src1_n);

  00069	8b 45 dc	 mov	 eax, DWORD PTR _src1_n$[ebp]
  0006c	50		 push	 eax
  0006d	8d 4d e8	 lea	 ecx, DWORD PTR _src1$[ebp]
  00070	51		 push	 ecx
  00071	6a 40		 push	 64			; 00000040H
  00073	8d 95 48 ff ff
	ff		 lea	 edx, DWORD PTR _des1$[ebp]
  00079	52		 push	 edx
  0007a	e8 00 00 00 00	 call	 _ConcatStrings_
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	89 85 3c ff ff
	ff		 mov	 DWORD PTR _des1_len$[ebp], eax

; 17   : 	const wchar_t* des1_temp = (*des1 != '\0') ? des1 : L"<empty>";

  00088	b8 02 00 00 00	 mov	 eax, 2
  0008d	6b c8 00	 imul	 ecx, eax, 0
  00090	0f b7 94 0d 48
	ff ff ff	 movzx	 edx, WORD PTR _des1$[ebp+ecx]
  00098	85 d2		 test	 edx, edx
  0009a	74 0e		 je	 SHORT $LN3@wmain
  0009c	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _des1$[ebp]
  000a2	89 85 e4 fb ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  000a8	eb 0a		 jmp	 SHORT $LN4@wmain
$LN3@wmain:
  000aa	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], OFFSET ??_C@_1BA@BJHHGHEK@?$AA?$DM?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$DO@
$LN4@wmain:
  000b4	8b 8d e4 fb ff
	ff		 mov	 ecx, DWORD PTR tv74[ebp]
  000ba	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _des1_temp$[ebp], ecx

; 18   : 	wprintf(L"  des_len: %d (%d) des: %s \n", des1_len, wcslen(des1_temp), des1_temp);

  000c0	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _des1_temp$[ebp]
  000c6	50		 push	 eax
  000c7	8b f4		 mov	 esi, esp
  000c9	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _des1_temp$[ebp]
  000cf	51		 push	 ecx
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	50		 push	 eax
  000e1	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _des1_len$[ebp]
  000e7	52		 push	 edx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@GLBMPLHO@?$AA?5?$AA?5?$AAd?$AAe?$AAs?$AA_?$AAl?$AAe?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI@
  000ed	e8 00 00 00 00	 call	 _wprintf
  000f2	83 c4 10	 add	 esp, 16			; 00000010H

; 19   : 
; 20   : 	// Destination buffer too small
; 21   : 	const wchar_t* src2[] = { L"Red ", L"Green ", L"Blue ", L"Yellow " };

  000f5	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _src2$[ebp], OFFSET ??_C@_19KMIINFB@?$AAR?$AAe?$AAd?$AA?5@
  000ff	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _src2$[ebp+4], OFFSET ??_C@_1O@PPEIGEJN@?$AAG?$AAr?$AAe?$AAe?$AAn?$AA?5@
  00109	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _src2$[ebp+8], OFFSET ??_C@_1M@IPBCFKCC@?$AAB?$AAl?$AAu?$AAe?$AA?5@
  00113	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _src2$[ebp+12], OFFSET ??_C@_1BA@FHEFHGHD@?$AAY?$AAe?$AAl?$AAl?$AAo?$AAw?$AA?5@

; 22   : 	int src2_n = sizeof(src2) / sizeof(wchar_t*);

  0011d	c7 85 0c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR _src2_n$[ebp], 4

; 23   : 	const int des2_size = 16;

  00127	c7 85 00 ff ff
	ff 10 00 00 00	 mov	 DWORD PTR _des2_size$[ebp], 16 ; 00000010H

; 24   : 	wchar_t des2[des2_size];
; 25   : 
; 26   : 	int des2_len = ConcatStrings_(des2, des2_size, src2, src2_n);

  00131	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _src2_n$[ebp]
  00137	50		 push	 eax
  00138	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _src2$[ebp]
  0013e	51		 push	 ecx
  0013f	6a 10		 push	 16			; 00000010H
  00141	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR _des2$[ebp]
  00147	52		 push	 edx
  00148	e8 00 00 00 00	 call	 _ConcatStrings_
  0014d	83 c4 10	 add	 esp, 16			; 00000010H
  00150	89 85 cc fe ff
	ff		 mov	 DWORD PTR _des2_len$[ebp], eax

; 27   : 	const wchar_t* des2_temp = (*des2 != '\0') ? des2 : L"<empty>";

  00156	b8 02 00 00 00	 mov	 eax, 2
  0015b	6b c8 00	 imul	 ecx, eax, 0
  0015e	0f b7 94 0d d8
	fe ff ff	 movzx	 edx, WORD PTR _des2$[ebp+ecx]
  00166	85 d2		 test	 edx, edx
  00168	74 0e		 je	 SHORT $LN5@wmain
  0016a	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _des2$[ebp]
  00170	89 85 e4 fb ff
	ff		 mov	 DWORD PTR tv90[ebp], eax
  00176	eb 0a		 jmp	 SHORT $LN6@wmain
$LN5@wmain:
  00178	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], OFFSET ??_C@_1BA@BJHHGHEK@?$AA?$DM?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$DO@
$LN6@wmain:
  00182	8b 8d e4 fb ff
	ff		 mov	 ecx, DWORD PTR tv90[ebp]
  00188	89 8d c0 fe ff
	ff		 mov	 DWORD PTR _des2_temp$[ebp], ecx

; 28   : 	wprintf(L"  des_len: %d (%d) des: %s \n", des2_len, wcslen(des2_temp), des2_temp);

  0018e	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _des2_temp$[ebp]
  00194	50		 push	 eax
  00195	8b f4		 mov	 esi, esp
  00197	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR _des2_temp$[ebp]
  0019d	51		 push	 ecx
  0019e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  001a4	83 c4 04	 add	 esp, 4
  001a7	3b f4		 cmp	 esi, esp
  001a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ae	50		 push	 eax
  001af	8b 95 cc fe ff
	ff		 mov	 edx, DWORD PTR _des2_len$[ebp]
  001b5	52		 push	 edx
  001b6	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@GLBMPLHO@?$AA?5?$AA?5?$AAd?$AAe?$AAs?$AA_?$AAl?$AAe?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI@
  001bb	e8 00 00 00 00	 call	 _wprintf
  001c0	83 c4 10	 add	 esp, 16			; 00000010H

; 29   : 
; 30   : 	// Empty string test
; 31   : 	const wchar_t* src3[] = { L"Airplane ", L"Car ", L"", L"Truck ", L"Boat " };

  001c3	c7 85 a4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _src3$[ebp], OFFSET ??_C@_1BE@CDMDMHDJ@?$AAA?$AAi?$AAr?$AAp?$AAl?$AAa?$AAn?$AAe?$AA?5@
  001cd	c7 85 a8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _src3$[ebp+4], OFFSET ??_C@_19JDGBIIPL@?$AAC?$AAa?$AAr?$AA?5@
  001d7	c7 85 ac fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _src3$[ebp+8], OFFSET ??_C@_11LOCGONAA@@
  001e1	c7 85 b0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _src3$[ebp+12], OFFSET ??_C@_1O@FEJHGEPG@?$AAT?$AAr?$AAu?$AAc?$AAk?$AA?5@
  001eb	c7 85 b4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _src3$[ebp+16], OFFSET ??_C@_1M@FEFOAPMO@?$AAB?$AAo?$AAa?$AAt?$AA?5@

; 32   : 	int src3_n = sizeof(src3) / sizeof(wchar_t*);

  001f5	c7 85 98 fe ff
	ff 05 00 00 00	 mov	 DWORD PTR _src3_n$[ebp], 5

; 33   : 	const int des3_size = 128;

  001ff	c7 85 8c fe ff
	ff 80 00 00 00	 mov	 DWORD PTR _des3_size$[ebp], 128 ; 00000080H

; 34   : 	wchar_t des3[des3_size];
; 35   : 
; 36   : 	int des3_len = ConcatStrings_(des3, des3_size, src3, src3_n);

  00209	8b 85 98 fe ff
	ff		 mov	 eax, DWORD PTR _src3_n$[ebp]
  0020f	50		 push	 eax
  00210	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _src3$[ebp]
  00216	51		 push	 ecx
  00217	68 80 00 00 00	 push	 128			; 00000080H
  0021c	8d 95 84 fd ff
	ff		 lea	 edx, DWORD PTR _des3$[ebp]
  00222	52		 push	 edx
  00223	e8 00 00 00 00	 call	 _ConcatStrings_
  00228	83 c4 10	 add	 esp, 16			; 00000010H
  0022b	89 85 78 fd ff
	ff		 mov	 DWORD PTR _des3_len$[ebp], eax

; 37   : 	const wchar_t* des3_temp = (*des3 != '\0') ? des3 : L"<empty>";

  00231	b8 02 00 00 00	 mov	 eax, 2
  00236	6b c8 00	 imul	 ecx, eax, 0
  00239	0f b7 94 0d 84
	fd ff ff	 movzx	 edx, WORD PTR _des3$[ebp+ecx]
  00241	85 d2		 test	 edx, edx
  00243	74 0e		 je	 SHORT $LN7@wmain
  00245	8d 85 84 fd ff
	ff		 lea	 eax, DWORD PTR _des3$[ebp]
  0024b	89 85 e4 fb ff
	ff		 mov	 DWORD PTR tv138[ebp], eax
  00251	eb 0a		 jmp	 SHORT $LN8@wmain
$LN7@wmain:
  00253	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], OFFSET ??_C@_1BA@BJHHGHEK@?$AA?$DM?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?$DO@
$LN8@wmain:
  0025d	8b 8d e4 fb ff
	ff		 mov	 ecx, DWORD PTR tv138[ebp]
  00263	89 8d 6c fd ff
	ff		 mov	 DWORD PTR _des3_temp$[ebp], ecx

; 38   : 	wprintf(L"  des_len: %d (%d) des: %s \n", des3_len, wcslen(des3_temp), des3_temp);

  00269	8b 85 6c fd ff
	ff		 mov	 eax, DWORD PTR _des3_temp$[ebp]
  0026f	50		 push	 eax
  00270	8b f4		 mov	 esi, esp
  00272	8b 8d 6c fd ff
	ff		 mov	 ecx, DWORD PTR _des3_temp$[ebp]
  00278	51		 push	 ecx
  00279	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcslen
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	50		 push	 eax
  0028a	8b 95 78 fd ff
	ff		 mov	 edx, DWORD PTR _des3_len$[ebp]
  00290	52		 push	 edx
  00291	68 00 00 00 00	 push	 OFFSET ??_C@_1DK@GLBMPLHO@?$AA?5?$AA?5?$AAd?$AAe?$AAs?$AA_?$AAl?$AAe?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI@
  00296	e8 00 00 00 00	 call	 _wprintf
  0029b	83 c4 10	 add	 esp, 16			; 00000010H

; 39   : 
; 40   : 	return 0;

  0029e	33 c0		 xor	 eax, eax

; 41   : }

  002a0	52		 push	 edx
  002a1	8b cd		 mov	 ecx, ebp
  002a3	50		 push	 eax
  002a4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@wmain
  002aa	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002af	58		 pop	 eax
  002b0	5a		 pop	 edx
  002b1	5f		 pop	 edi
  002b2	5e		 pop	 esi
  002b3	5b		 pop	 ebx
  002b4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b7	33 cd		 xor	 ecx, ebp
  002b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002be	81 c4 1c 04 00
	00		 add	 esp, 1052		; 0000041cH
  002c4	3b ec		 cmp	 ebp, esp
  002c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002cb	8b e5		 mov	 esp, ebp
  002cd	5d		 pop	 ebp
  002ce	c3		 ret	 0
  002cf	90		 npad	 1
$LN16@wmain:
  002d0	06 00 00 00	 DD	 6
  002d4	00 00 00 00	 DD	 $LN15@wmain
$LN15@wmain:
  002d8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  002dc	10 00 00 00	 DD	 16			; 00000010H
  002e0	00 00 00 00	 DD	 $LN9@wmain
  002e4	48 ff ff ff	 DD	 -184			; ffffff48H
  002e8	80 00 00 00	 DD	 128			; 00000080H
  002ec	00 00 00 00	 DD	 $LN10@wmain
  002f0	18 ff ff ff	 DD	 -232			; ffffff18H
  002f4	10 00 00 00	 DD	 16			; 00000010H
  002f8	00 00 00 00	 DD	 $LN11@wmain
  002fc	d8 fe ff ff	 DD	 -296			; fffffed8H
  00300	20 00 00 00	 DD	 32			; 00000020H
  00304	00 00 00 00	 DD	 $LN12@wmain
  00308	a4 fe ff ff	 DD	 -348			; fffffea4H
  0030c	14 00 00 00	 DD	 20			; 00000014H
  00310	00 00 00 00	 DD	 $LN13@wmain
  00314	84 fd ff ff	 DD	 -636			; fffffd84H
  00318	00 01 00 00	 DD	 256			; 00000100H
  0031c	00 00 00 00	 DD	 $LN14@wmain
$LN14@wmain:
  00320	64		 DB	 100			; 00000064H
  00321	65		 DB	 101			; 00000065H
  00322	73		 DB	 115			; 00000073H
  00323	33		 DB	 51			; 00000033H
  00324	00		 DB	 0
$LN13@wmain:
  00325	73		 DB	 115			; 00000073H
  00326	72		 DB	 114			; 00000072H
  00327	63		 DB	 99			; 00000063H
  00328	33		 DB	 51			; 00000033H
  00329	00		 DB	 0
$LN12@wmain:
  0032a	64		 DB	 100			; 00000064H
  0032b	65		 DB	 101			; 00000065H
  0032c	73		 DB	 115			; 00000073H
  0032d	32		 DB	 50			; 00000032H
  0032e	00		 DB	 0
$LN11@wmain:
  0032f	73		 DB	 115			; 00000073H
  00330	72		 DB	 114			; 00000072H
  00331	63		 DB	 99			; 00000063H
  00332	32		 DB	 50			; 00000032H
  00333	00		 DB	 0
$LN10@wmain:
  00334	64		 DB	 100			; 00000064H
  00335	65		 DB	 101			; 00000065H
  00336	73		 DB	 115			; 00000073H
  00337	31		 DB	 49			; 00000031H
  00338	00		 DB	 0
$LN9@wmain:
  00339	73		 DB	 115			; 00000073H
  0033a	72		 DB	 114			; 00000072H
  0033b	63		 DB	 99			; 00000063H
  0033c	31		 DB	 49			; 00000031H
  0033d	00		 DB	 0
_wmain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A452D4A0_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

  00028	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0002b	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00031	50		 push	 eax
  00032	6a 00		 push	 0
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00037	51		 push	 ecx
  00038	8b f4		 mov	 esi, esp
  0003a	6a 01		 push	 1
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  00042	83 c4 04	 add	 esp, 4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 __vfprintf_l
  00052	83 c4 10	 add	 esp, 16			; 00000010H
  00055	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 959  :         __crt_va_end(_ArgList);

  00058	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 960  :         return _Result;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 961  :     }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A452D4A0_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00035	52		 push	 edx
  00036	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	51		 push	 ecx
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 644  :     }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _wprintf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_wprintf PROC						; COMDAT

; 611  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __05476D76_corecrt_wstdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 612  :         int _Result;
; 613  :         va_list _ArgList;
; 614  :         __crt_va_start(_ArgList, _Format);

  00028	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0002b	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 615  :         _Result = _vfwprintf_l(stdout, _Format, NULL, _ArgList);

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00031	50		 push	 eax
  00032	6a 00		 push	 0
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00037	51		 push	 ecx
  00038	8b f4		 mov	 esi, esp
  0003a	6a 01		 push	 1
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  00042	83 c4 04	 add	 esp, 4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 __vfwprintf_l
  00052	83 c4 10	 add	 esp, 16			; 00000010H
  00055	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 616  :         __crt_va_end(_ArgList);

  00058	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 617  :         return _Result;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 618  :     }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_wprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vfwprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfwprintf_l PROC					; COMDAT

; 305  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __05476D76_corecrt_wstdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 306  :         return __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00035	52		 push	 edx
  00036	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	51		 push	 ecx
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfwprintf
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 307  :     }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
__vfwprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __2CC6E67D_corecrt_stdio_config@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00028	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
